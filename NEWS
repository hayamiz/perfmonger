## 2018-05-15: PerfMonger 0.11.1
  * Bug fixes
    * [record] subcommand:
      * Fixed session detection mechanism (did not worked for execution under sudo)

## 2018-05-15: PerfMonger 0.11.0
  * New features
    * [play] subcommand:
      * Add --color, --pretty option for pretty JSON output
    * [live] subcommand:
      * Add --color, --pretty option for pretty JSON output
    * [fingerprint] subcommand:
      * Collect additional info: numactl, ec2-metadata
  * Bug fixes
    * [plot] subcommand:
      * Correctly filter out disk usages by --disk-only option
  * Changes
    * Dropped support of i386
    * Use go-projson for JSON output
    * [plot] subcommand:
      * Stacked graphs layout in allcpu.pdf

## 2017-06-19: PerfMonger 0.10.0
  * New features
    * [record] subcommand:
      * Record /proc/interrupts information (experimental)
      * Support gzipped output format
        * Enabled by default
        * Disabled with --no-gzip option
    * [play] subcommand:
      * Play /proc/interrupts information by cpu cores (experimental)
      * Support gzipped input
    * [summary] subcommand:
      * Summarize /proc/interrupts information (experimental, currently outputs only in JSON mode)
      * Support gzipped input
    * [fingerprint] subcommand:
      * Additionally log biosdecode and nvme info
    * Improved shell completion
  * Bug fixes
    * [record] subcommand:
      * Get CPU count by nproc(1) in linux subsystem
      * Create a session only in background mode, and an existing session do not prevent launching perfmonger-record in foreground mode
    * [fingerprint] subcommand:
      * Surpress accessing non-readable sysfs files

## 2016-12-12: PerfMonger 0.9.0
  * New features
    * [init-shell] subcommand: Added for loading shell completion function from rcfile
      * zsh support
      * bash support
    * [fingerprint]
      * log LVM, fdisk, and lsblk info
    * [plot]
      * Fast plot data formatting with new core implementation
      * Add --disk-only, --disk-read-only, --disk-write-only to filter disks for plot
      * Add --plot-iops-max to limit Y-axis range

## 2016-11-22: PerfMonger 0.8.2
  * Bug fixes
    * [record] subcommand:
      * Fix null checking

## 2016-11-22: PerfMonger 0.8.1
  * New features
    * [record] subcommand:
      * Add --status to check currently running session
  * Bug fixes
    * [record] subcommand:
      * Open correct lock file for session management
      * Error handling in --kill processing (no session, already dead session PID)

## 2016-11-22: PerfMonger 0.8.0
  * New features
    * [record] subcommand:
      * Implemented "session" for preventing double start
      * Add --background and --kill option for running perfmonger in background (useful for scripting)
    * [summary] subcommand:
      * Add --disk-only option to filter results of not interesting disks

## 2016-10-02: PerfMonger 0.7.1 released

  * Bug fix
    * [record] subcommand:
      * Parse /proc/stat with 10 columns (9 values) correctly

## 2015-03-08: PerfMonger 0.7.0 released

  * New features
    * Bash completion support
    * Zsh completion support
    * [live] subcommand:
      * Record and play perfmonger log in JSON
    * [record] subcommand:
      * Add Network device usage
    * [play] subcommand:
      * Play a perfmonger log and print in JSON
  * Changes
    * [record] subcommand:
      * Its core was completely rewritten in Go and records data in encoding/gob format
      * Carve out JSON output function to [play] subcommand
  * Bug fixes
    * [plot] subcommand:
      * Correctly find supported terminal
    * [server] subcommand:
      * Disambiguate command line options

## 2015-01-18: PerfMonger 0.6.0 released

  * New features
    * Add gem packaging support
    * Add subcommand alias mechanism
    * [record] subcommand:
      * Exponential interval backoff.
        * Recording interval gets longer every after 2000 records.
        * Enable by default (disabled by --no-interval-backoff option)
    * [fingerprint] subcommand:
      * Record output of dmidecode(1) if available
  * Changes
    * [record] subcommand:
      * Record information about xvd* devices (Xen virtual blockdev)
      * Support start delay and timeout of measurement
      * Output JSON format change:
        * "r/s" => "riops"
        * "rsec/s" => "rsecps"
        * "w/s" => "wiops"
        * "wsec/s" => "wsecps"
        * "%idle" => "idle"
        * "%usr" => "usr"
        * (...)
    * [fingerprint] subcommand:
      * Rename former 'bukko' to 'fingerprint'
      * Create a tarball instead of creating files under output directory
    * [summary] subcommand:
      * Pager support for summary output
    * [plot] subcommand:
      * Reduced memory usage
  * Bug fixes
    * plot subcommand
      * In all-CPU graph, correctly calculate # of columns with small(2-3) # of CPUs
    * summary subcommand
      * Correctly calculate I/O information of all devices

## 2013-12-03: PerfMonger 0.5.1 released

This is a bug fix release.

  * Bug fixes
    * record subcommand
      * Fix corrupted device name output in case of realloc-ing an output buffer

## 2012-11-29: PerfMonger 0.5.0 released

This release focuses on improvement of usability. Newly added
'summary' subcommand is very useful for summarizing recorded
perfmonger log files. The release also has many other improvements and
bug fixes, including support of Ruby 1.8.7 (only Ruby 1.9/2.0 were
supported before).

PerfMonger is available on yum repository from this release.

  * New features
    * Add new subcommands
      * 'perfmonger summary LOG_FILE' ... summarization of perfmonger log file
  * Changes
    * [record] subcommand
      * Show all devices and CPU usage by default
      * add -D option to show all devices
    * [bukko] subcommand
      * Save Linux distro info
      * Save kernel module info
      * Save sysctl info
      * Detailed PCIe config collection
      * Detailed IO queue config collection
    * Remove dependency on glib2
  * Bug fixes
    * Refactor configure.ac / Makefile.am
    * bukko subcommand
      * Find lspci(1) binary manually
    * stat subcommand
      * Avoid using Process.spawn in Ruby 1.8.7
    * summary subcommand
      * Corrected invalid %other in 'stat' summary

## 2013-07-29: PerfMonger 0.4.0 released

  * New features
    * Show version number with -v option
    * Add new subcommands
      * 'perfmonger stat <cmd>' ... monitoring during command execution. It works like 'perf stat <cmd>'
      * 'perfmonger server' ... self-contained realtime HTML5-based monitor
      * 'perfmonger bukko' ... gathering system information as much as possible
    * 'perfmonger record' records # of sectors per second, I/O latency, I/O block size, I/O queue length
    * add RSpec specs for testing ruby library part
    * 'perfmonger plot' generates a graph of CPU usage for each core
  * Changes
    * Default output format of 'perfmonger plot' is changed from EPS to PDF
      * It requires pdfcairo supported gnuplot 4.6 or later
  * Fixed bugs
    * Avoid broken JSON by interrupted with SIGINT/SIGTERM by handling signals correctly

## 2013-05-26: PerfMonger 0.3.0 released

  * New features
    * Context switch frequency monitoring
    * 'perfmonger COMMAD' style invocation
      * perfmonger record ... record monitoring data
      * perfmonger plot   ... plot recorded data
  * Fixed bugs
    * Broken JSON data by partial flush
    * Do not say 'panic' if interval is too short
    * Do not try to build tests without Cutter

## 2013-02-04: PerfMonger 0.2.0 released

  * New features
    * CPU usage monitoring

## 2011-12-09: PerfMonger 0.1.0 released

  * New features
    * I/O performance monitoring